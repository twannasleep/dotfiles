# vim:fileencoding=utf-8:ft=conf

# Font family. You can also specify different fonts for the
# bold/italic/bold-italic variants. By default they are derived automatically,
# by the OSes font system. Setting them manually is useful for font families
# that have many weight variants like Book, Medium, Thick, etc. For example:
# font_family Operator Mono Book
# bold_font Operator Mono Thick
# bold_italic_font Operator Mono Medium
# font_family      Input Mono
font_family      JetBrains Mono
bold_font        auto
italic_font      auto
bold_italic_font auto
font_size        14.0
adjust_line_height 0
adjust_column_width 0
disable_ligatures never

# The foreground color
foreground       #d8dee9

# The background color
background       #2e3440

# The foreground for selections
selection_foreground #2e3440

# The background for selections
selection_background #88c0d0

# The cursor color
cursor           #d8dee9

# The cursor shape can be one of (block, beam, underline)
shell_integration no-cursor
cursor_shape beam

# The interval (in seconds) at which to blink the cursor. Set to zero to
# disable blinking.
cursor_blink_interval 0.5

# Stop blinking cursor after the specified number of seconds of keyboard inactivity. Set to
# zero or a negative number to never stop blinking.
cursor_stop_blinking_after 0

# Number of lines of history to keep in memory for scrolling back
scrollback_lines 10000

# Program with which to view scrollback in a new window. The scrollback buffer is passed as
# STDIN to this program. If you change it, make sure the program you use can
# handle ANSI escape sequences for colors and text formatting.
scrollback_pager less +G -R

# Wheel scroll multiplier (modify the amount scrolled by the mouse wheel)
wheel_scroll_multiplier 5.0

# The interval between successive clicks to detect double/triple clicks (in seconds)
click_interval 0.5

# Characters considered part of a word when double clicking. In addition to these characters
# any character that is marked as an alpha-numeric character in the unicode
# database will be matched.
select_by_word_characters :@-./_~?&=%+#

# Hide mouse cursor after the specified number of seconds of the mouse not being used. Set to
# zero or a negative number to disable mouse cursor hiding.
mouse_hide_wait 0

# The enabled window layouts. A comma separated list of layout names. The special value * means
# all layouts. The first listed layout will be used as the startup layout.
# For a list of available layouts, see the file layouts.py
enabled_layouts *

# If enabled, the window size will be remembered so that new instances of kitty will have the same
# size as the previous instance. If disabled, the window will initially have size configured
# by initial_window_width/height, in pixels.
remember_window_size   no
initial_window_width   1000
initial_window_height  650

# Delay (in milliseconds) between screen updates. Decreasing it, increases fps
# at the cost of more CPU usage. The default value yields ~100fps which is more
# that sufficient for most uses.
# repaint_delay    10
repaint_delay    6

# Delay (in milliseconds) before input from the program running in the terminal
# is processed. Note that decreasing it will increase responsiveness, but also
# increase CPU usage and might cause flicker in full screen programs that
# redraw the entire screen on each loop, because kitty is so fast that partial
# screen updates will be drawn.
input_delay 2

# Visual bell duration. Flash the screen when a bell occurs for the specified number of
# seconds. Set to zero to disable.
visual_bell_duration 0.1

# Enable/disable the audio bell. Useful in environments that require silence.
enable_audio_bell no

# The modifier keys to press when clicking with the mouse on URLs to open the URL
open_url_modifiers cmd

# The program with which to open URLs that are clicked on. The special value "default" means to
# use the operating system's default URL handler.
open_url_with default

# The value of the TERM environment variable to set
term xterm-kitty

# The width (in pts) of window borders. Will be rounded to the nearest number of pixels based on screen resolution.
window_border_width 0

window_margin_width 8
window_padding_width 8

# The color for the border of the active window
active_border_color #ffffff

# The color for the border of inactive windows
inactive_border_color #cccccc

# Tab-bar colors
active_tab_foreground   #2e3440
active_tab_background   #88c0d0
inactive_tab_foreground #d8dee9
inactive_tab_background #4c566a

# The 16 terminal colors. There are 8 basic colors, each color has a dull and
# bright version.

# black
color0   #3b4252
color8   #4c566a

# red
color1   #bf616a
color9   #bf616a

# green
color2   #a3be8c
color10  #a3be8c

# yellow
color3   #ebcb8b
color11  #ebcb8b

# blue
color4   #81a1c1
color12  #81a1c1

# magenta
color5   #b48ead
color13  #b48ead

# cyan
color6   #88c0d0
color14  #8fbcbb

# white
color7   #e5e9f0
color15  #eceff4

# Key mapping
# For a list of key names, see: http://www.glfw.org/docs/latest/group__keys.html
# For a list of modifier names, see: http://www.glfw.org/docs/latest/group__mods.html
# You can use the special action no_op to unmap a keyboard shortcut that is
# assigned in the default configuration.

# Clipboard
map cmd+c             paste_from_clipboard
map shift+insert      paste_from_selection

# Scrolling
map ctrl+shift+up        scroll_line_up
map ctrl+shift+down      scroll_line_down
map ctrl+shift+k         scroll_line_up
map ctrl+shift+j         scroll_line_down
map ctrl+shift+page_up   scroll_page_up
map ctrl+shift+page_down scroll_page_down
map ctrl+shift+home      scroll_home
map ctrl+shift+end       scroll_end
map ctrl+shift+h         show_scrollback

# Window management
map cmd+n             new_os_window
map cmd+w             close_window
map cmd+enter         new_window
map cmd+shift+]       next_window
map cmd+shift+[       previous_window
map cmd+shift+f       move_window_forward
map cmd+shift+b       move_window_backward
map cmd+shift+`       move_window_to_top
map cmd+shift+1       first_window
map cmd+shift+2       second_window
map cmd+shift+3       third_window
map cmd+shift+4       fourth_window
map cmd+shift+5       fifth_window
map cmd+shift+6       sixth_window
map cmd+shift+7       seventh_window
map cmd+shift+8       eighth_window
map cmd+shift+9       ninth_window
map cmd+shift+0       tenth_window

# Tab management
map cmd+right         next_tab
map cmd+left          previous_tab
map cmd+shift+t       new_tab
map cmd+shift+q       close_tab
map cmd+shift+l       next_layout
map cmd+shift+.       move_tab_forward
map cmd+shift+,       move_tab_backward

# Miscellaneous
map ctrl+shift+up      increase_font_size
map ctrl+shift+down    decrease_font_size
map ctrl+shift+backspace restore_font_size

# Symbol mapping (special font for specified unicode code points). Map the
# specified unicode codepoints to a particular font. Useful if you need special
# rendering for some symbols, such as for Powerline. Avoids the need for
# patched fonts. Each unicode code point is specified in the form U+<code point
# in hexadecimal>. You can specify multiple code points, separated by commas
# and ranges separated by hyphens. symbol_map itself can be specified multiple times.
# Syntax is:
#
# symbol_map codepoints Font Family Name
#
# For example:
#
#symbol_map U+E0A0-U+E0A2,U+E0B0-U+E0B3 PowerlineSymbols
hide_window_decorations no
macos_option_as_alt yes
macos_quit_when_last_window_closed yes
macos_window_resizable yes
macos_show_window_title_in menubar
macos_custom_beam_cursor yes

# Change the color of the kitty window's titlebar on macOS. A value of "system"
# means to use the default system color, a value of "background" means to use
# the default background color and finally you can use an arbitrary color, such
# as #12af59 or "red".
macos_titlebar_color background

allow_remote_control yes

# URL handling
url_style curly
detect_urls yes

# Better tab bar
tab_bar_edge top
tab_bar_style powerline
tab_powerline_style slanted

# Key mapping for macOS
# Common macOS shortcuts
map cmd+c        copy_to_clipboard
map cmd+v        paste_from_clipboard
map shift+insert paste_from_selection

# Font size
map cmd+plus     increase_font_size
map cmd+minus    decrease_font_size
map cmd+0        restore_font_size

# Window management
map cmd+n        new_os_window
map cmd+t        new_tab
map cmd+w        close_window
map cmd+shift+w  close_os_window
map cmd+enter    new_window
map cmd+d        new_window
map cmd+shift+d  new_window_with_cwd

# Window navigation
map cmd+]        next_window
map cmd+[        previous_window
map cmd+`        move_window_to_top
map cmd+1        first_window
map cmd+2        second_window
map cmd+3        third_window
map cmd+4        fourth_window
map cmd+5        fifth_window
map cmd+6        sixth_window
map cmd+7        seventh_window
map cmd+8        eighth_window
map cmd+9        ninth_window

# Tab management
map cmd+right    next_tab
map cmd+left     previous_tab
map cmd+shift+]  next_tab
map cmd+shift+[  previous_tab
map cmd+shift+t  new_tab_with_cwd
map cmd+shift+.  move_tab_forward
map cmd+shift+,  move_tab_backward

# Layout management
map cmd+l        next_layout
map ctrl+cmd+f   toggle_fullscreen

# Scrolling
map cmd+up       scroll_page_up
map cmd+down     scroll_page_down
map cmd+k        scroll_line_up
map cmd+j        scroll_line_down
map cmd+home     scroll_home
map cmd+end      scroll_end
map cmd+h        show_scrollback

# Search
map cmd+f        show_scrollback_in_less
map cmd+shift+f  show_scrollback_in_pager

# Misc
map cmd+,        edit_config_file
map cmd+r        load_config_file

# macOS window controls
macos_traditional_fullscreen yes
macos_show_window_title_in all

# ===== Advanced =====
update_check_interval 24
clipboard_control write-clipboard write-primary read-clipboard read-primary
allow_hyperlinks yes

# ===== OS Specific Tweaks =====
macos_thicken_font 0

# ===== Performance Tuning =====
sync_to_monitor yes

# ===== Key Mappings =====
# Clipboard
map cmd+c        copy_to_clipboard
map cmd+v        paste_from_clipboard
map shift+insert paste_from_selection

# Font size
map cmd+plus     increase_font_size
map cmd+minus    decrease_font_size
map cmd+0        restore_font_size

# Window management
map cmd+n        new_os_window
map cmd+t        new_tab
map cmd+w        close_window
map cmd+shift+w  close_os_window
map cmd+enter    new_window
map cmd+d        new_window
map cmd+shift+d  new_window_with_cwd

# Window navigation
map cmd+]        next_window
map cmd+[        previous_window
map cmd+`        move_window_to_top
map cmd+1        first_window
map cmd+2        second_window
map cmd+3        third_window
map cmd+4        fourth_window
map cmd+5        fifth_window
map cmd+6        sixth_window
map cmd+7        seventh_window
map cmd+8        eighth_window
map cmd+9        ninth_window

# Tab management
map cmd+right    next_tab
map cmd+left     previous_tab
map cmd+shift+]  next_tab
map cmd+shift+[  previous_tab
map cmd+shift+t  new_tab_with_cwd
map cmd+shift+.  move_tab_forward
map cmd+shift+,  move_tab_backward

# Layout management
map cmd+l        next_layout
map ctrl+cmd+f   toggle_fullscreen

# Scrolling
map cmd+up       scroll_page_up
map cmd+down     scroll_page_down
map cmd+k        scroll_line_up
map cmd+j        scroll_line_down
map cmd+home     scroll_home
map cmd+end      scroll_end
map cmd+h        show_scrollback

# Search
map cmd+f        show_scrollback_in_less
map cmd+shift+f  show_scrollback_in_pager

# Misc
map cmd+,        edit_config_file
map cmd+r        load_config_file

# Developer-specific shortcuts
map cmd+shift+e  kitten hints --type path --program -
map cmd+shift+p  kitten hints --type hash --program -
map f1           launch --type=overlay --stdin-source=@screen_scrollback less +G -R
